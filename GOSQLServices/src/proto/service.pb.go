// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type User struct {
	FirstName            string   `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName             string   `protobuf:"bytes,2,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Email                string   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Bio                  string   `protobuf:"bytes,4,opt,name=bio,proto3" json:"bio,omitempty"`
	ProfilePicture       string   `protobuf:"bytes,5,opt,name=profile_picture,json=profilePicture,proto3" json:"profile_picture,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *User) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetBio() string {
	if m != nil {
		return m.Bio
	}
	return ""
}

func (m *User) GetProfilePicture() string {
	if m != nil {
		return m.ProfilePicture
	}
	return ""
}

type Khali struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Khali) Reset()         { *m = Khali{} }
func (m *Khali) String() string { return proto.CompactTextString(m) }
func (*Khali) ProtoMessage()    {}
func (*Khali) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}

func (m *Khali) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Khali.Unmarshal(m, b)
}
func (m *Khali) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Khali.Marshal(b, m, deterministic)
}
func (m *Khali) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Khali.Merge(m, src)
}
func (m *Khali) XXX_Size() int {
	return xxx_messageInfo_Khali.Size(m)
}
func (m *Khali) XXX_DiscardUnknown() {
	xxx_messageInfo_Khali.DiscardUnknown(m)
}

var xxx_messageInfo_Khali proto.InternalMessageInfo

type Downvotes struct {
	AnswerId             int64    `protobuf:"varint,1,opt,name=answer_id,json=answerId,proto3" json:"answer_id,omitempty"`
	Downvotes            int64    `protobuf:"varint,2,opt,name=downvotes,proto3" json:"downvotes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Downvotes) Reset()         { *m = Downvotes{} }
func (m *Downvotes) String() string { return proto.CompactTextString(m) }
func (*Downvotes) ProtoMessage()    {}
func (*Downvotes) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{2}
}

func (m *Downvotes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Downvotes.Unmarshal(m, b)
}
func (m *Downvotes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Downvotes.Marshal(b, m, deterministic)
}
func (m *Downvotes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Downvotes.Merge(m, src)
}
func (m *Downvotes) XXX_Size() int {
	return xxx_messageInfo_Downvotes.Size(m)
}
func (m *Downvotes) XXX_DiscardUnknown() {
	xxx_messageInfo_Downvotes.DiscardUnknown(m)
}

var xxx_messageInfo_Downvotes proto.InternalMessageInfo

func (m *Downvotes) GetAnswerId() int64 {
	if m != nil {
		return m.AnswerId
	}
	return 0
}

func (m *Downvotes) GetDownvotes() int64 {
	if m != nil {
		return m.Downvotes
	}
	return 0
}

type Kudos struct {
	AnswerId             int64    `protobuf:"varint,1,opt,name=answer_id,json=answerId,proto3" json:"answer_id,omitempty"`
	Kudos                int64    `protobuf:"varint,2,opt,name=kudos,proto3" json:"kudos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Kudos) Reset()         { *m = Kudos{} }
func (m *Kudos) String() string { return proto.CompactTextString(m) }
func (*Kudos) ProtoMessage()    {}
func (*Kudos) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{3}
}

func (m *Kudos) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Kudos.Unmarshal(m, b)
}
func (m *Kudos) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Kudos.Marshal(b, m, deterministic)
}
func (m *Kudos) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Kudos.Merge(m, src)
}
func (m *Kudos) XXX_Size() int {
	return xxx_messageInfo_Kudos.Size(m)
}
func (m *Kudos) XXX_DiscardUnknown() {
	xxx_messageInfo_Kudos.DiscardUnknown(m)
}

var xxx_messageInfo_Kudos proto.InternalMessageInfo

func (m *Kudos) GetAnswerId() int64 {
	if m != nil {
		return m.AnswerId
	}
	return 0
}

func (m *Kudos) GetKudos() int64 {
	if m != nil {
		return m.Kudos
	}
	return 0
}

type NewAnswer struct {
	AnswerText           string   `protobuf:"bytes,1,opt,name=answerText,proto3" json:"answerText,omitempty"`
	UserId               int64    `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	QuestionId           int64    `protobuf:"varint,3,opt,name=question_id,json=questionId,proto3" json:"question_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewAnswer) Reset()         { *m = NewAnswer{} }
func (m *NewAnswer) String() string { return proto.CompactTextString(m) }
func (*NewAnswer) ProtoMessage()    {}
func (*NewAnswer) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{4}
}

func (m *NewAnswer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewAnswer.Unmarshal(m, b)
}
func (m *NewAnswer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewAnswer.Marshal(b, m, deterministic)
}
func (m *NewAnswer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewAnswer.Merge(m, src)
}
func (m *NewAnswer) XXX_Size() int {
	return xxx_messageInfo_NewAnswer.Size(m)
}
func (m *NewAnswer) XXX_DiscardUnknown() {
	xxx_messageInfo_NewAnswer.DiscardUnknown(m)
}

var xxx_messageInfo_NewAnswer proto.InternalMessageInfo

func (m *NewAnswer) GetAnswerText() string {
	if m != nil {
		return m.AnswerText
	}
	return ""
}

func (m *NewAnswer) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *NewAnswer) GetQuestionId() int64 {
	if m != nil {
		return m.QuestionId
	}
	return 0
}

type NewQuestion struct {
	QuestionTitle        string   `protobuf:"bytes,1,opt,name=question_title,json=questionTitle,proto3" json:"question_title,omitempty"`
	QuestionDetails      string   `protobuf:"bytes,2,opt,name=question_details,json=questionDetails,proto3" json:"question_details,omitempty"`
	PosterId             int64    `protobuf:"varint,3,opt,name=poster_id,json=posterId,proto3" json:"poster_id,omitempty"`
	TopicId              int64    `protobuf:"varint,4,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewQuestion) Reset()         { *m = NewQuestion{} }
func (m *NewQuestion) String() string { return proto.CompactTextString(m) }
func (*NewQuestion) ProtoMessage()    {}
func (*NewQuestion) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{5}
}

func (m *NewQuestion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewQuestion.Unmarshal(m, b)
}
func (m *NewQuestion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewQuestion.Marshal(b, m, deterministic)
}
func (m *NewQuestion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewQuestion.Merge(m, src)
}
func (m *NewQuestion) XXX_Size() int {
	return xxx_messageInfo_NewQuestion.Size(m)
}
func (m *NewQuestion) XXX_DiscardUnknown() {
	xxx_messageInfo_NewQuestion.DiscardUnknown(m)
}

var xxx_messageInfo_NewQuestion proto.InternalMessageInfo

func (m *NewQuestion) GetQuestionTitle() string {
	if m != nil {
		return m.QuestionTitle
	}
	return ""
}

func (m *NewQuestion) GetQuestionDetails() string {
	if m != nil {
		return m.QuestionDetails
	}
	return ""
}

func (m *NewQuestion) GetPosterId() int64 {
	if m != nil {
		return m.PosterId
	}
	return 0
}

func (m *NewQuestion) GetTopicId() int64 {
	if m != nil {
		return m.TopicId
	}
	return 0
}

type NewTopic struct {
	TopicName            string   `protobuf:"bytes,1,opt,name=topic_name,json=topicName,proto3" json:"topic_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewTopic) Reset()         { *m = NewTopic{} }
func (m *NewTopic) String() string { return proto.CompactTextString(m) }
func (*NewTopic) ProtoMessage()    {}
func (*NewTopic) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{6}
}

func (m *NewTopic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewTopic.Unmarshal(m, b)
}
func (m *NewTopic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewTopic.Marshal(b, m, deterministic)
}
func (m *NewTopic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewTopic.Merge(m, src)
}
func (m *NewTopic) XXX_Size() int {
	return xxx_messageInfo_NewTopic.Size(m)
}
func (m *NewTopic) XXX_DiscardUnknown() {
	xxx_messageInfo_NewTopic.DiscardUnknown(m)
}

var xxx_messageInfo_NewTopic proto.InternalMessageInfo

func (m *NewTopic) GetTopicName() string {
	if m != nil {
		return m.TopicName
	}
	return ""
}

type FollowQuestionRequest struct {
	FollowerId           int64    `protobuf:"varint,1,opt,name=follower_id,json=followerId,proto3" json:"follower_id,omitempty"`
	QuestionId           int64    `protobuf:"varint,2,opt,name=question_id,json=questionId,proto3" json:"question_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FollowQuestionRequest) Reset()         { *m = FollowQuestionRequest{} }
func (m *FollowQuestionRequest) String() string { return proto.CompactTextString(m) }
func (*FollowQuestionRequest) ProtoMessage()    {}
func (*FollowQuestionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{7}
}

func (m *FollowQuestionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FollowQuestionRequest.Unmarshal(m, b)
}
func (m *FollowQuestionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FollowQuestionRequest.Marshal(b, m, deterministic)
}
func (m *FollowQuestionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FollowQuestionRequest.Merge(m, src)
}
func (m *FollowQuestionRequest) XXX_Size() int {
	return xxx_messageInfo_FollowQuestionRequest.Size(m)
}
func (m *FollowQuestionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FollowQuestionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FollowQuestionRequest proto.InternalMessageInfo

func (m *FollowQuestionRequest) GetFollowerId() int64 {
	if m != nil {
		return m.FollowerId
	}
	return 0
}

func (m *FollowQuestionRequest) GetQuestionId() int64 {
	if m != nil {
		return m.QuestionId
	}
	return 0
}

type FollowTopicRequest struct {
	FollowerId           int64    `protobuf:"varint,1,opt,name=follower_id,json=followerId,proto3" json:"follower_id,omitempty"`
	TopicId              int64    `protobuf:"varint,2,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FollowTopicRequest) Reset()         { *m = FollowTopicRequest{} }
func (m *FollowTopicRequest) String() string { return proto.CompactTextString(m) }
func (*FollowTopicRequest) ProtoMessage()    {}
func (*FollowTopicRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{8}
}

func (m *FollowTopicRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FollowTopicRequest.Unmarshal(m, b)
}
func (m *FollowTopicRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FollowTopicRequest.Marshal(b, m, deterministic)
}
func (m *FollowTopicRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FollowTopicRequest.Merge(m, src)
}
func (m *FollowTopicRequest) XXX_Size() int {
	return xxx_messageInfo_FollowTopicRequest.Size(m)
}
func (m *FollowTopicRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FollowTopicRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FollowTopicRequest proto.InternalMessageInfo

func (m *FollowTopicRequest) GetFollowerId() int64 {
	if m != nil {
		return m.FollowerId
	}
	return 0
}

func (m *FollowTopicRequest) GetTopicId() int64 {
	if m != nil {
		return m.TopicId
	}
	return 0
}

type FollowUserRequest struct {
	FollowerId           int64    `protobuf:"varint,1,opt,name=follower_id,json=followerId,proto3" json:"follower_id,omitempty"`
	FollowedUserId       int64    `protobuf:"varint,2,opt,name=followed_user_id,json=followedUserId,proto3" json:"followed_user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FollowUserRequest) Reset()         { *m = FollowUserRequest{} }
func (m *FollowUserRequest) String() string { return proto.CompactTextString(m) }
func (*FollowUserRequest) ProtoMessage()    {}
func (*FollowUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{9}
}

func (m *FollowUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FollowUserRequest.Unmarshal(m, b)
}
func (m *FollowUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FollowUserRequest.Marshal(b, m, deterministic)
}
func (m *FollowUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FollowUserRequest.Merge(m, src)
}
func (m *FollowUserRequest) XXX_Size() int {
	return xxx_messageInfo_FollowUserRequest.Size(m)
}
func (m *FollowUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FollowUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FollowUserRequest proto.InternalMessageInfo

func (m *FollowUserRequest) GetFollowerId() int64 {
	if m != nil {
		return m.FollowerId
	}
	return 0
}

func (m *FollowUserRequest) GetFollowedUserId() int64 {
	if m != nil {
		return m.FollowedUserId
	}
	return 0
}

type StringResponse struct {
	Response             string   `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StringResponse) Reset()         { *m = StringResponse{} }
func (m *StringResponse) String() string { return proto.CompactTextString(m) }
func (*StringResponse) ProtoMessage()    {}
func (*StringResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{10}
}

func (m *StringResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StringResponse.Unmarshal(m, b)
}
func (m *StringResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StringResponse.Marshal(b, m, deterministic)
}
func (m *StringResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StringResponse.Merge(m, src)
}
func (m *StringResponse) XXX_Size() int {
	return xxx_messageInfo_StringResponse.Size(m)
}
func (m *StringResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StringResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StringResponse proto.InternalMessageInfo

func (m *StringResponse) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

type Response struct {
	Status               bool     `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{11}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

type Token struct {
	AccessToken          string   `protobuf:"bytes,1,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Token) Reset()         { *m = Token{} }
func (m *Token) String() string { return proto.CompactTextString(m) }
func (*Token) ProtoMessage()    {}
func (*Token) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{12}
}

func (m *Token) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Token.Unmarshal(m, b)
}
func (m *Token) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Token.Marshal(b, m, deterministic)
}
func (m *Token) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Token.Merge(m, src)
}
func (m *Token) XXX_Size() int {
	return xxx_messageInfo_Token.Size(m)
}
func (m *Token) XXX_DiscardUnknown() {
	xxx_messageInfo_Token.DiscardUnknown(m)
}

var xxx_messageInfo_Token proto.InternalMessageInfo

func (m *Token) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

type LoginRequest struct {
	State                string   `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	Authcode             string   `protobuf:"bytes,2,opt,name=Authcode,proto3" json:"Authcode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginRequest) Reset()         { *m = LoginRequest{} }
func (m *LoginRequest) String() string { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()    {}
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{13}
}

func (m *LoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRequest.Unmarshal(m, b)
}
func (m *LoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRequest.Marshal(b, m, deterministic)
}
func (m *LoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRequest.Merge(m, src)
}
func (m *LoginRequest) XXX_Size() int {
	return xxx_messageInfo_LoginRequest.Size(m)
}
func (m *LoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRequest proto.InternalMessageInfo

func (m *LoginRequest) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *LoginRequest) GetAuthcode() string {
	if m != nil {
		return m.Authcode
	}
	return ""
}

func init() {
	proto.RegisterType((*User)(nil), "proto.User")
	proto.RegisterType((*Khali)(nil), "proto.Khali")
	proto.RegisterType((*Downvotes)(nil), "proto.Downvotes")
	proto.RegisterType((*Kudos)(nil), "proto.Kudos")
	proto.RegisterType((*NewAnswer)(nil), "proto.NewAnswer")
	proto.RegisterType((*NewQuestion)(nil), "proto.NewQuestion")
	proto.RegisterType((*NewTopic)(nil), "proto.NewTopic")
	proto.RegisterType((*FollowQuestionRequest)(nil), "proto.FollowQuestionRequest")
	proto.RegisterType((*FollowTopicRequest)(nil), "proto.FollowTopicRequest")
	proto.RegisterType((*FollowUserRequest)(nil), "proto.FollowUserRequest")
	proto.RegisterType((*StringResponse)(nil), "proto.StringResponse")
	proto.RegisterType((*Response)(nil), "proto.Response")
	proto.RegisterType((*Token)(nil), "proto.Token")
	proto.RegisterType((*LoginRequest)(nil), "proto.LoginRequest")
}

func init() {
	proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626)
}

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 699 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xa4, 0x54, 0x5d, 0x4f, 0x13, 0x41,
	0x14, 0x4d, 0x29, 0x4b, 0x77, 0x6f, 0x4b, 0x5b, 0x47, 0xd1, 0x52, 0x51, 0xc9, 0x26, 0x06, 0x30,
	0x84, 0x28, 0x3e, 0x18, 0xf4, 0x41, 0x9b, 0x10, 0x12, 0xa2, 0x21, 0xb8, 0x94, 0x07, 0x5f, 0x6c,
	0x96, 0xee, 0x14, 0x36, 0x2c, 0x3b, 0x75, 0x67, 0x16, 0xfc, 0x1f, 0x3e, 0xf8, 0x43, 0xfd, 0x03,
	0xce, 0xdc, 0x99, 0xd9, 0x6e, 0x5d, 0x13, 0x21, 0x3e, 0xb5, 0xe7, 0xdc, 0x73, 0xcf, 0x9e, 0xf9,
	0xb8, 0x03, 0xcb, 0x9c, 0x66, 0xd7, 0xf1, 0x98, 0xee, 0x4c, 0x33, 0x26, 0x18, 0x71, 0xf0, 0xc7,
	0xff, 0x51, 0x83, 0xc5, 0x53, 0x59, 0x21, 0x4f, 0x00, 0x26, 0x71, 0xc6, 0xc5, 0x28, 0x0d, 0xaf,
	0x68, 0xaf, 0xb6, 0x5e, 0xdb, 0xf4, 0x02, 0x0f, 0x99, 0x23, 0x49, 0x90, 0xc7, 0xe0, 0x25, 0xa1,
	0xad, 0x2e, 0x60, 0xd5, 0x55, 0x04, 0x16, 0x1f, 0x80, 0x43, 0xaf, 0xc2, 0x38, 0xe9, 0xd5, 0xb1,
	0xa0, 0x01, 0xe9, 0x42, 0xfd, 0x2c, 0x66, 0xbd, 0x45, 0xe4, 0xd4, 0x5f, 0xb2, 0x01, 0x1d, 0xf9,
	0xd5, 0x49, 0x9c, 0xd0, 0xd1, 0x34, 0x1e, 0x8b, 0x3c, 0xa3, 0x3d, 0x07, 0xab, 0x6d, 0x43, 0x1f,
	0x6b, 0xd6, 0x6f, 0x80, 0xf3, 0xf1, 0x22, 0x4c, 0x62, 0xff, 0x00, 0xbc, 0x7d, 0x76, 0x93, 0x5e,
	0x33, 0x41, 0xb9, 0xca, 0x10, 0xa6, 0xfc, 0x86, 0x66, 0xa3, 0x38, 0xc2, 0x84, 0xf5, 0xc0, 0xd5,
	0xc4, 0x61, 0x44, 0xd6, 0xc0, 0x8b, 0xac, 0x12, 0x03, 0xd6, 0x83, 0x19, 0xe1, 0xbf, 0x95, 0x86,
	0x79, 0xc4, 0xfe, 0xe1, 0x21, 0xd7, 0x71, 0xa9, 0x54, 0xa6, 0x5f, 0x03, 0x9f, 0x82, 0x77, 0x44,
	0x6f, 0x06, 0x28, 0x22, 0x4f, 0x01, 0xb4, 0x7c, 0x48, 0xbf, 0x0b, 0xb3, 0x4d, 0x25, 0x86, 0x3c,
	0x82, 0x46, 0xce, 0xb5, 0xbb, 0x36, 0x59, 0x52, 0x50, 0x7a, 0x3f, 0x83, 0xe6, 0xb7, 0x9c, 0x72,
	0x11, 0xb3, 0x54, 0x15, 0xeb, 0x58, 0x04, 0x4b, 0x1d, 0x46, 0xfe, 0xcf, 0x1a, 0x34, 0xe5, 0x77,
	0x3e, 0x1b, 0x86, 0x3c, 0x87, 0x76, 0xd1, 0x20, 0x62, 0x91, 0xd8, 0x43, 0x59, 0xb6, 0xec, 0x50,
	0x91, 0x64, 0x0b, 0xba, 0x85, 0x2c, 0xa2, 0x42, 0x6e, 0x3c, 0x37, 0xe7, 0xd3, 0xb1, 0xfc, 0xbe,
	0xa6, 0xd5, 0xda, 0xa7, 0x8c, 0x0b, 0x9d, 0x4e, 0x07, 0x70, 0x35, 0x21, 0xf3, 0xad, 0x82, 0x2b,
	0x98, 0x3c, 0x15, 0x55, 0x5b, 0xc4, 0x5a, 0x03, 0xb1, 0x4c, 0xb6, 0x05, 0xae, 0x0c, 0x36, 0x54,
	0x48, 0x5d, 0x13, 0x2d, 0x2b, 0x5f, 0x13, 0x64, 0xd4, 0x4d, 0xf0, 0xbf, 0xc0, 0xca, 0x01, 0x4b,
	0x12, 0x56, 0x2c, 0x23, 0xa0, 0x98, 0x42, 0x2d, 0x7f, 0x82, 0x85, 0xf2, 0xce, 0x83, 0xa5, 0xaa,
	0xfb, 0xb3, 0x50, 0xd9, 0x9f, 0x63, 0x20, 0xda, 0x1a, 0x83, 0xdc, 0xda, 0xb7, 0xbc, 0xae, 0x85,
	0xf9, 0x75, 0x7d, 0x85, 0x7b, 0xda, 0x51, 0x0d, 0xc0, 0xad, 0x0d, 0x37, 0xa1, 0x6b, 0x50, 0x34,
	0x9a, 0x3f, 0xea, 0xb6, 0xe5, 0x4f, 0xf1, 0xc8, 0xfd, 0x6d, 0x68, 0x9f, 0x88, 0x2c, 0x4e, 0xcf,
	0x03, 0xca, 0xa7, 0x2c, 0xe5, 0x94, 0xf4, 0xc1, 0xcd, 0xcc, 0x7f, 0xb3, 0x77, 0x05, 0xf6, 0x7d,
	0x70, 0x0b, 0xdd, 0x43, 0x58, 0xe2, 0x22, 0x14, 0x39, 0x47, 0x95, 0x1b, 0x18, 0x24, 0x4f, 0xc2,
	0x19, 0xb2, 0x4b, 0x9a, 0x92, 0x75, 0x68, 0x86, 0xe3, 0x31, 0xe5, 0x1c, 0xa1, 0xf1, 0x2a, 0x53,
	0xfe, 0x07, 0x68, 0x7d, 0x62, 0xe7, 0x71, 0x71, 0x00, 0xf2, 0x6e, 0x2b, 0x13, 0xfb, 0x5d, 0x0d,
	0x54, 0xa0, 0x41, 0x2e, 0x2e, 0xc6, 0x2c, 0x2a, 0xa6, 0xda, 0xe2, 0xdd, 0x5f, 0x0e, 0xc0, 0x20,
	0x8a, 0x4e, 0xf4, 0xb3, 0x41, 0x5e, 0x80, 0x83, 0x86, 0xe4, 0xbe, 0x7e, 0x41, 0x76, 0xca, 0xf6,
	0xfd, 0x96, 0x21, 0x75, 0xbc, 0x97, 0xe0, 0x05, 0x34, 0xc4, 0x7d, 0xe0, 0xc4, 0x96, 0x70, 0xa2,
	0xfb, 0x2b, 0x06, 0xfd, 0xb1, 0x33, 0x1b, 0xd0, 0x90, 0xdf, 0xc2, 0x97, 0xa8, 0x69, 0x14, 0x0a,
	0xf4, 0x3b, 0x06, 0x14, 0xc2, 0x57, 0xd0, 0x92, 0xc2, 0xd9, 0xa3, 0xd0, 0x35, 0x82, 0x82, 0xa9,
	0xb6, 0xc8, 0xfb, 0x2b, 0x5b, 0xf4, 0xfc, 0x17, 0x61, 0x14, 0xaa, 0x4a, 0x77, 0xc0, 0x93, 0x52,
	0x33, 0xeb, 0xd6, 0xba, 0x98, 0xfe, 0xaa, 0x7e, 0x17, 0x9a, 0x52, 0x5f, 0xcc, 0x2c, 0x99, 0x75,
	0x58, 0xae, 0xda, 0xb3, 0x8d, 0x71, 0xf4, 0x38, 0x75, 0x66, 0x0d, 0x48, 0x54, 0xd5, 0xef, 0xa1,
	0x3d, 0x3f, 0x51, 0x64, 0xcd, 0x48, 0xfe, 0x3a, 0x68, 0x55, 0x83, 0x3d, 0x68, 0x96, 0xe6, 0x86,
	0xac, 0xce, 0x75, 0x97, 0x67, 0xa9, 0xda, 0xfa, 0x06, 0x60, 0x36, 0x20, 0xa4, 0x37, 0xd7, 0x59,
	0x9a, 0x99, 0x6a, 0xe3, 0x00, 0xba, 0xa7, 0xe9, 0xe4, 0xbf, 0x62, 0xbf, 0x83, 0x65, 0x6b, 0x71,
	0xf7, 0xe0, 0x7b, 0xd0, 0xb2, 0xcd, 0x77, 0x8c, 0x7e, 0xb6, 0x84, 0xf8, 0xf5, 0xef, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x39, 0x06, 0xe2, 0x6a, 0x2f, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AddServiceClient is the client API for AddService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AddServiceClient interface {
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*Token, error)
	ReadUsers(ctx context.Context, in *Khali, opts ...grpc.CallOption) (*StringResponse, error)
	AddUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*Response, error)
	AddDownvotes(ctx context.Context, in *Downvotes, opts ...grpc.CallOption) (*Response, error)
	AddKudos(ctx context.Context, in *Kudos, opts ...grpc.CallOption) (*Response, error)
	AddAnswer(ctx context.Context, in *NewAnswer, opts ...grpc.CallOption) (*Response, error)
	AddQuestion(ctx context.Context, in *NewQuestion, opts ...grpc.CallOption) (*Response, error)
	AddTopic(ctx context.Context, in *NewTopic, opts ...grpc.CallOption) (*Response, error)
	FollowQuestion(ctx context.Context, in *FollowQuestionRequest, opts ...grpc.CallOption) (*Response, error)
	FollowTopic(ctx context.Context, in *FollowTopicRequest, opts ...grpc.CallOption) (*Response, error)
	FollowUser(ctx context.Context, in *FollowUserRequest, opts ...grpc.CallOption) (*Response, error)
	UnfollowQuestion(ctx context.Context, in *FollowQuestionRequest, opts ...grpc.CallOption) (*Response, error)
	UnfollowTopic(ctx context.Context, in *FollowTopicRequest, opts ...grpc.CallOption) (*Response, error)
	UnfollowUser(ctx context.Context, in *FollowUserRequest, opts ...grpc.CallOption) (*Response, error)
}

type addServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAddServiceClient(cc grpc.ClientConnInterface) AddServiceClient {
	return &addServiceClient{cc}
}

func (c *addServiceClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*Token, error) {
	out := new(Token)
	err := c.cc.Invoke(ctx, "/proto.AddService/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addServiceClient) ReadUsers(ctx context.Context, in *Khali, opts ...grpc.CallOption) (*StringResponse, error) {
	out := new(StringResponse)
	err := c.cc.Invoke(ctx, "/proto.AddService/ReadUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addServiceClient) AddUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.AddService/AddUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addServiceClient) AddDownvotes(ctx context.Context, in *Downvotes, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.AddService/AddDownvotes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addServiceClient) AddKudos(ctx context.Context, in *Kudos, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.AddService/AddKudos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addServiceClient) AddAnswer(ctx context.Context, in *NewAnswer, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.AddService/AddAnswer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addServiceClient) AddQuestion(ctx context.Context, in *NewQuestion, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.AddService/AddQuestion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addServiceClient) AddTopic(ctx context.Context, in *NewTopic, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.AddService/AddTopic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addServiceClient) FollowQuestion(ctx context.Context, in *FollowQuestionRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.AddService/FollowQuestion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addServiceClient) FollowTopic(ctx context.Context, in *FollowTopicRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.AddService/FollowTopic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addServiceClient) FollowUser(ctx context.Context, in *FollowUserRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.AddService/FollowUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addServiceClient) UnfollowQuestion(ctx context.Context, in *FollowQuestionRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.AddService/UnfollowQuestion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addServiceClient) UnfollowTopic(ctx context.Context, in *FollowTopicRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.AddService/UnfollowTopic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addServiceClient) UnfollowUser(ctx context.Context, in *FollowUserRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.AddService/UnfollowUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AddServiceServer is the server API for AddService service.
type AddServiceServer interface {
	Login(context.Context, *LoginRequest) (*Token, error)
	ReadUsers(context.Context, *Khali) (*StringResponse, error)
	AddUser(context.Context, *User) (*Response, error)
	AddDownvotes(context.Context, *Downvotes) (*Response, error)
	AddKudos(context.Context, *Kudos) (*Response, error)
	AddAnswer(context.Context, *NewAnswer) (*Response, error)
	AddQuestion(context.Context, *NewQuestion) (*Response, error)
	AddTopic(context.Context, *NewTopic) (*Response, error)
	FollowQuestion(context.Context, *FollowQuestionRequest) (*Response, error)
	FollowTopic(context.Context, *FollowTopicRequest) (*Response, error)
	FollowUser(context.Context, *FollowUserRequest) (*Response, error)
	UnfollowQuestion(context.Context, *FollowQuestionRequest) (*Response, error)
	UnfollowTopic(context.Context, *FollowTopicRequest) (*Response, error)
	UnfollowUser(context.Context, *FollowUserRequest) (*Response, error)
}

// UnimplementedAddServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAddServiceServer struct {
}

func (*UnimplementedAddServiceServer) Login(ctx context.Context, req *LoginRequest) (*Token, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (*UnimplementedAddServiceServer) ReadUsers(ctx context.Context, req *Khali) (*StringResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadUsers not implemented")
}
func (*UnimplementedAddServiceServer) AddUser(ctx context.Context, req *User) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddUser not implemented")
}
func (*UnimplementedAddServiceServer) AddDownvotes(ctx context.Context, req *Downvotes) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddDownvotes not implemented")
}
func (*UnimplementedAddServiceServer) AddKudos(ctx context.Context, req *Kudos) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddKudos not implemented")
}
func (*UnimplementedAddServiceServer) AddAnswer(ctx context.Context, req *NewAnswer) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddAnswer not implemented")
}
func (*UnimplementedAddServiceServer) AddQuestion(ctx context.Context, req *NewQuestion) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddQuestion not implemented")
}
func (*UnimplementedAddServiceServer) AddTopic(ctx context.Context, req *NewTopic) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddTopic not implemented")
}
func (*UnimplementedAddServiceServer) FollowQuestion(ctx context.Context, req *FollowQuestionRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FollowQuestion not implemented")
}
func (*UnimplementedAddServiceServer) FollowTopic(ctx context.Context, req *FollowTopicRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FollowTopic not implemented")
}
func (*UnimplementedAddServiceServer) FollowUser(ctx context.Context, req *FollowUserRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FollowUser not implemented")
}
func (*UnimplementedAddServiceServer) UnfollowQuestion(ctx context.Context, req *FollowQuestionRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnfollowQuestion not implemented")
}
func (*UnimplementedAddServiceServer) UnfollowTopic(ctx context.Context, req *FollowTopicRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnfollowTopic not implemented")
}
func (*UnimplementedAddServiceServer) UnfollowUser(ctx context.Context, req *FollowUserRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnfollowUser not implemented")
}

func RegisterAddServiceServer(s *grpc.Server, srv AddServiceServer) {
	s.RegisterService(&_AddService_serviceDesc, srv)
}

func _AddService_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddServiceServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AddService/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddServiceServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AddService_ReadUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Khali)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddServiceServer).ReadUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AddService/ReadUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddServiceServer).ReadUsers(ctx, req.(*Khali))
	}
	return interceptor(ctx, in, info, handler)
}

func _AddService_AddUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddServiceServer).AddUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AddService/AddUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddServiceServer).AddUser(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _AddService_AddDownvotes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Downvotes)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddServiceServer).AddDownvotes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AddService/AddDownvotes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddServiceServer).AddDownvotes(ctx, req.(*Downvotes))
	}
	return interceptor(ctx, in, info, handler)
}

func _AddService_AddKudos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Kudos)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddServiceServer).AddKudos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AddService/AddKudos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddServiceServer).AddKudos(ctx, req.(*Kudos))
	}
	return interceptor(ctx, in, info, handler)
}

func _AddService_AddAnswer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewAnswer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddServiceServer).AddAnswer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AddService/AddAnswer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddServiceServer).AddAnswer(ctx, req.(*NewAnswer))
	}
	return interceptor(ctx, in, info, handler)
}

func _AddService_AddQuestion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewQuestion)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddServiceServer).AddQuestion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AddService/AddQuestion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddServiceServer).AddQuestion(ctx, req.(*NewQuestion))
	}
	return interceptor(ctx, in, info, handler)
}

func _AddService_AddTopic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewTopic)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddServiceServer).AddTopic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AddService/AddTopic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddServiceServer).AddTopic(ctx, req.(*NewTopic))
	}
	return interceptor(ctx, in, info, handler)
}

func _AddService_FollowQuestion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FollowQuestionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddServiceServer).FollowQuestion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AddService/FollowQuestion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddServiceServer).FollowQuestion(ctx, req.(*FollowQuestionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AddService_FollowTopic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FollowTopicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddServiceServer).FollowTopic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AddService/FollowTopic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddServiceServer).FollowTopic(ctx, req.(*FollowTopicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AddService_FollowUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FollowUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddServiceServer).FollowUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AddService/FollowUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddServiceServer).FollowUser(ctx, req.(*FollowUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AddService_UnfollowQuestion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FollowQuestionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddServiceServer).UnfollowQuestion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AddService/UnfollowQuestion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddServiceServer).UnfollowQuestion(ctx, req.(*FollowQuestionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AddService_UnfollowTopic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FollowTopicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddServiceServer).UnfollowTopic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AddService/UnfollowTopic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddServiceServer).UnfollowTopic(ctx, req.(*FollowTopicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AddService_UnfollowUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FollowUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddServiceServer).UnfollowUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AddService/UnfollowUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddServiceServer).UnfollowUser(ctx, req.(*FollowUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AddService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.AddService",
	HandlerType: (*AddServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _AddService_Login_Handler,
		},
		{
			MethodName: "ReadUsers",
			Handler:    _AddService_ReadUsers_Handler,
		},
		{
			MethodName: "AddUser",
			Handler:    _AddService_AddUser_Handler,
		},
		{
			MethodName: "AddDownvotes",
			Handler:    _AddService_AddDownvotes_Handler,
		},
		{
			MethodName: "AddKudos",
			Handler:    _AddService_AddKudos_Handler,
		},
		{
			MethodName: "AddAnswer",
			Handler:    _AddService_AddAnswer_Handler,
		},
		{
			MethodName: "AddQuestion",
			Handler:    _AddService_AddQuestion_Handler,
		},
		{
			MethodName: "AddTopic",
			Handler:    _AddService_AddTopic_Handler,
		},
		{
			MethodName: "FollowQuestion",
			Handler:    _AddService_FollowQuestion_Handler,
		},
		{
			MethodName: "FollowTopic",
			Handler:    _AddService_FollowTopic_Handler,
		},
		{
			MethodName: "FollowUser",
			Handler:    _AddService_FollowUser_Handler,
		},
		{
			MethodName: "UnfollowQuestion",
			Handler:    _AddService_UnfollowQuestion_Handler,
		},
		{
			MethodName: "UnfollowTopic",
			Handler:    _AddService_UnfollowTopic_Handler,
		},
		{
			MethodName: "UnfollowUser",
			Handler:    _AddService_UnfollowUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
